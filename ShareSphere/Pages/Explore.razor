@page "/explore"
@using ShareSphere.Data;
@inject NavigationManager navMan
@inject FirebaseDatabase db
@inject FirebaseAuthentication firebaseAuth

<div id="search-div">
    <input type="text" id="username-input" @bind="@userSearch" @onkeyup="@Enter" class="form-control" placeholder="Search">
</div>

<div class="dropdown m-3">
    <button class="gradient-btn dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Select game
    </button>
    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
        @foreach (string game in games)
        {
            <li><button class="dropdown-item" @onclick="() => sort(game)">@game</button></li>
        }
    </ul>
</div>

@if (posts == null)
{
    <div class="loading-view">
        <div class="loader"></div>
        <p>Loading...</p>
    </div>
}
else
{
    @foreach (Post iterate in posts)
    {
        <PostComponent post="@iterate" isDelete="@isDelete" profileToUpdateState="@null" />

    }

    <p id="infinity-scroll-end">
        Seems like you have spent quite some time on our app.<br />
        <i class="bi bi-chat-heart-fill"></i><br />
        Thank you!
    </p>
}




@code {
    private string userSearch = "";
    private List<Post> posts = new List<Post>();
    private List<string> gamerNames = new List<string>();
    private List<string> games = new List<string>();
    private bool isDelete = false;

    protected async override void OnInitialized()
    {
        posts = await db.getAllPosts();
        games = await db.getAllGames();
        StateHasChanged();
    }

    async void search()
    {
        if (userSearch.Length >= 3)
        {
            navMan.NavigateTo("/profile/" + userSearch);
        }

    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Key.ToLower() == "numpadenter" || e.Key.ToLower() == "enter")
        {
            search();
        }
    }

    public async void sort(String gamename)
    {
        if (gamename == "All")
        {
            posts = await db.getAllPosts();
        }
        else
        {
            posts = await db.getAllPostsByGame(gamename);
        }
        StateHasChanged();
    }

    public async void update()
    {
        posts = await db.getAllPosts();
        games = await db.getAllGames();
        StateHasChanged();
    }
}