@page "/explore"
@using ShareSphere.Data;
@inject NavigationManager navMan
@inject FirebaseDatabase db
@inject FirebaseAuthentication firebaseAuth

<div id="search-div">
    <input type="text" id="username-input" @bind="@userSearch" @onkeyup="@Enter" class="form-control" placeholder="Search">
</div>

<div class="scroll-container">
    <div class="scroll-content">
        <div class="row flex-row flex-nowrap">
            <div class="col-auto">
                <button class="select-game-btn">Fall Guys</button>
            </div>
            <div class="col-auto">
                <button class="select-game-btn">Apex Legends</button>
            </div>
            <div class="col-auto">
                <button class="select-game-btn">Horizon Zero Dawn</button>
            </div>
        </div>
    </div>
</div>

@foreach (Post iterate in posts)
{
    <div id="post">
        <div class="row">
            <div id="post-header-div" class="col">
                <div class="row">
                    <div id="profile-image-div" class="col-auto">
                        <img src="/images/bot_fill.png" id="profile-image" class="img-icon" />
                    </div>
                    <div id="profile-name-div" class="col-auto">
                        <p id="profile-name">@iterate.gamer.username</p>
                    </div>
                    <div class="col"></div>
                    <div class="col-auto">
                        <div id="profile-join-btn-div">
                            <button id="profile-join-btn" class="gradient-btn" @onclick="() => joinBtnClicked(iterate.userId)">Join</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div id="post-video-div" class="col">
                <video id="post-video" controls autoplay muted loop class="w-100">
                    <source src="@iterate.videoUrl" type="video/mp4">
                </video>
            </div>
        </div>
        <div class="row">
            <div id="post-interact-div" class="col">
                <div class="row">
                    <div id="wp-image-btn-div" class="col-auto">
                        <button id="wp-image-btn" class="interact-btn" @onclick="() => wpBtnClicked(iterate)">WP</button>
                        <small>@iterate.wps</small>
                    </div>
                    <div id="comment-image-btn-div" class="col-auto">
                        <button id="comment-image-btn" class="interact-btn" @onclick="() => commentBtnClicked(iterate)">
                            <i class="bi bi-chat-square-text-fill" />
                        </button>
                    </div>
                    <div class="col"></div>
                    <div id="bookmark-image-btn-div" class="col-auto">
                        <button id="bookmark-image-btn" class="interact-btn" @onclick="() => bookmarkBtnClicked(iterate, iterate.userId)">
                            <i class="bi bi-bookmark-fill" />
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!--
                <div class="row">
                <div id="post-comment-div" class="col">
                    <p id="post-comment">Quicktey: Test Post for layout</p>
                </div>
            </div>
        -->
    </div>
}

<p id="infinity-scroll-end">
    Seems like you have spent quite some time on our app.<br />
    <i class="bi bi-chat-heart-fill"></i><br />
    Thank you!
</p>

@code {
    private string userSearch = "";
    private List<Post> posts = new List<Post>();
    private List<string> gamerNames = new List<string>();

    protected async override void OnInitialized()
    {
        posts = await db.getAllPosts();
        StateHasChanged();
    }

    async void search()
    {
        if (userSearch.Length >= 3)
        {
            navMan.NavigateTo("/profile/" + userSearch);
        }

    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Key.ToLower() == "numpadenter" || e.Key.ToLower() == "enter")
        {
            search();
        }
    }

    private async void joinBtnClicked(string gamerId)
    {
        Gamer joinedGamer = await db.getGamerByUid(gamerId);
        Gamer loggedInGamer = await db.getGamerByUid(firebaseAuth.getClient().User.Uid);
        if (loggedInGamer.joins(joinedGamer))
        {
            loggedInGamer.addJoins(joinedGamer);
        }
        else
        {
            loggedInGamer.removeJoins(joinedGamer);
        }
        db.updateGamer(loggedInGamer);
    }

    private async void wpBtnClicked(Post post)
    {
        Gamer loggedInGamer = await db.getGamerByUid(firebaseAuth.getClient().User.Uid);
        if (loggedInGamer.wp(post))
        {
            post.wps++;
            loggedInGamer.addWP(post);

        }
        else
        {
            post.wps--;
            loggedInGamer.removeWP(post);
        }
        db.updatePost(post);
        db.updateGamer(loggedInGamer);
        StateHasChanged();
    }

    private void commentBtnClicked(Post post)
    {
        // comment pop-up
    }

    private async void bookmarkBtnClicked(Post post, string gamerId)
    {
        // save in gamer
    }
}