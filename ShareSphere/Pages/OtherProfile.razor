@page "/profile/{potentialUser}"
@using ShareSphere.Data;
@inject FirebaseAuthentication firebaseAuth
@inject FirebaseDatabase db
@inject NavigationManager navMan

@if(gamer == null){
    <p>Loading...</p>
} else
{
    <div class="profile-info my-2">
        <div class="row">
            <div class="col-3 mr-1 py-2">
                <img src="/images/bot_fill.png" class="rounded-circle profile-info-icon" />
            </div>
            <div class="col-9 ml-1">
                <div class="row username">@gamer.username</div>
                <div class="row">
                    @if (gamer.platforms.Count > 0)
                    {
                        @foreach (int i in gamer.platforms)
                        {
                            <div class="col-auto platform-label rounded-1 m-1 px-2 py-1">@i</div>
                        }
                    }
                    else
                    {
                        <span>Keine Plattform ausgewählt</span>
                    }
                </div>
                <div class="row games">
                    <div class="col">
                        @if (gamer.games.Count > 0)
                        {
                            @foreach (int i in gamer.games)
                            {
                                <span>/ Game Nr. @i /</span>
                            }
                        }
                        else
                        {
                            <span>Keine Games ausgewählt</span>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                @gamer.biography
            </div>
        </div>
        <div class="row my-2">
            <div class="col">
                <div id="join-btn-div">
                    <button id="join-btn" class="gradient-btn btn-block" @onclick="@joinBtnClicked">Join</button>
                </div>
            </div>
        </div>
    </div>
    @if(posts.Count > 0)
    {
        @foreach (Post iterate in posts)
        {
            <div id="post">
                <div class="row">
                    <div id="post-header-div" class="col">
                        <div class="row">
                            <div id="profile-image-div" class="col-auto">
                                <img src="/images/bot_fill.png" id="profile-image" class="img-icon" />
                            </div>
                            <div id="profile-name-div" class="col-auto">
                                <p id="profile-name">@gamer.username</p>
                            </div>
                            <div class="col"></div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div id="post-video-div" class="col">
                        <video id="post-video" controls autoplay muted loop class="w-100">
                            <source src="@iterate.videoUrl" type="video/mp4">
                        </video>
                    </div>
                </div>
                <div class="row">
                    <div id="post-interact-div" class="col">
                        <div class="row">
                            <div id="wp-image-btn-div" class="col-auto">
                                <button id="wp-image-btn" class="interact-btn" @onclick="() => wpBtnClicked(iterate)">WP</button>
                                <small>@iterate.wps</small>
                            </div>
                            <div id="comment-image-btn-div" class="col-auto">
                                <button id="comment-image-btn" class="interact-btn" @onclick="() => commentBtnClicked(iterate)">
                                    <i class="bi bi-chat-square-text-fill" />
                                </button>
                            </div>
                            <div class="col"></div>
                            <div id="bookmark-image-btn-div" class="col-auto">
                                <button id="bookmark-image-btn" class="interact-btn" @onclick="() => bookmarkBtnClicked(iterate)">
                                    <i class="bi bi-bookmark-fill" />
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <small class="post-small">@iterate.views views</small>
                    </div>
                    <div class="col-auto">
                        <small class="post-small">@iterate.date</small>
                    </div>
                </div>
                <!--
                    <div class="row">
                        <div id="post-comment-div" class="col">
                            <p id="post-comment">Quicktey: Test Post for layout</p>
                        </div>
                    </div>
                -->
            </div>
        }
    } else
    {
        <div class="profile-posts text-center h-100 align-items-center">
            <div>No content added yet</div>
        </div>
    }
}



@code {
    [Parameter]
    public string potentialUser { get; set; }
    public Gamer gamer;
    private List<Post> posts = new List<Post>();

    protected async override void OnInitialized()
    {
        gamer = await db.getGamerByUsername(potentialUser);
        if(gamer == null)
        {
            navMan.NavigateTo("/explore");
        } else
        {
            StateHasChanged();
        }
        posts = await db.getAllPostsFromGamer(gamer);
        StateHasChanged();
    }

    private async void joinBtnClicked()
    {
        Gamer loggedInGamer = await db.getGamerByUid(firebaseAuth.getClient().User.Uid);
        if (!loggedInGamer.joins(gamer))
        {
            loggedInGamer.addJoins(gamer);
        }
        else
        {
            loggedInGamer.removeJoins(gamer);
        }
        db.updateGamer(loggedInGamer);
    }

    private async void joinBtnClicked(Gamer gamer)
    {
        Gamer loggedInGamer = await db.getGamerByUid(firebaseAuth.getClient().User.Uid);
        if (loggedInGamer.joins(gamer))
        {
            loggedInGamer.addJoins(gamer);
        }
        else
        {
            loggedInGamer.removeJoins(gamer);
        }
        db.updateGamer(loggedInGamer);
    }

    private async void wpBtnClicked(Post post)
    {
        Gamer loggedInGamer = await db.getGamerByUid(firebaseAuth.getClient().User.Uid);
        if (loggedInGamer.wp(post))
        {
            post.wps++;
            loggedInGamer.addWP(post);

        } else
        {
            post.wps--;
            loggedInGamer.removeWP(post);
        }
        db.updatePost(post);
        db.updateGamer(loggedInGamer);
        StateHasChanged();
    }

    private void commentBtnClicked(Post post)
    {
        // comment pop-up
    }

    private async void bookmarkBtnClicked(Post post)
    {
        // save in gamer
    }
}