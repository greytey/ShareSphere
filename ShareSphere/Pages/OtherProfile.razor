@page "/profile/{potentialUser}"
@using ShareSphere.Data;
@inject FirebaseAuthentication firebaseAuth
@inject FirebaseDatabase db
@inject NavigationManager navMan

@if (gamer == null)
{
    <div class="loading-view">
        <div class="loader"></div>
        <p>Loading...</p>
    </div>
}
else
{
    <div class="profile-info my-2">
        <div class="row">
            <div class="col-3 profile-info-icon-div">
                <img src="@gamer.photoUrl" class="rounded-circle profile-info-icon" />
            </div>
            <div class="col-9 ml-1">
                <div class="row username">@gamer.username</div>
                <div class="row">
                    @if (gamer.platforms.Count > 0)
                    {
                        @foreach (string i in gamer.platforms)
                        {
                            <div class="col-auto platform-label rounded-1 m-1 px-2 py-1">@i</div>
                        }
                    }
                    else
                    {
                        <span>Keine Plattform ausgewählt</span>
                    }
                </div>
                <div class="row games">
                    <div class="col">
                        @if (gamer.games.Count > 0)
                        {
                            @foreach (string i in gamer.games)
                            {
                                <span>/ @i /</span>
                            }
                        }
                        else
                        {
                            <span>Keine Games ausgewählt</span>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                @gamer.biography
            </div>
        </div>
        <div class="row my-2">
            <div class="col">
                <div id="join-btn-div">
                    <button id="join-btn" class="gradient-btn w-100" @onclick="@joinBtnClicked">@JoinButtonText</button>
                </div>
            </div>
        </div>
    </div>
    @if (posts.Count > 0)
    {
        @foreach (Post iterate in posts)
        {
            <PostComponent post="@iterate" isDelete="@isDelete" profileToUpdateState="@null" />

        }
    }
    else
    {
        <div class="profile-posts text-center h-100 align-items-center">
            <div>No content added yet</div>
        </div>
    }
}

@code {
    [Parameter]
    public string potentialUser { get; set; }

    public Gamer gamer;
    private List<Post> posts = new List<Post>();
    private bool isDelete = false;

    private string JoinButtonText = "Join";


    protected async override void OnInitialized()
    {
        try
        {
            gamer = await db.getGamerByUsername(potentialUser);
            posts = await db.getAllPostsFromGamer(gamer);
            Gamer loggedInGamer = await db.getGamerByUid(firebaseAuth.getClient().User.Uid);
            JoinButtonText = loggedInGamer.joins(gamer) ? "Join" : "Joined";
            StateHasChanged();
        }
        catch (Exception e)
        {
            navMan.NavigateTo("/explore");
        }
    }

    private async void joinBtnClicked()
    {
        Gamer loggedInGamer = await db.getGamerByUid(firebaseAuth.getClient().User.Uid);
        if (loggedInGamer.joins(gamer))
        {
            loggedInGamer.addJoins(gamer);
            JoinButtonText = "Joined";
            StateHasChanged();
        }
        else
        {
            loggedInGamer.removeJoins(gamer);
            JoinButtonText = "Join";
            StateHasChanged();
        }
        db.updateGamer(loggedInGamer);
    }

    public async void update()
    {
        posts = await db.getAllPostsFromGamer(gamer);
        StateHasChanged();
    }
}