@page "/forMe"
@using ShareSphere.Data;
@inject FirebaseDatabase db
@inject FirebaseAuthentication firebaseAuth

@if (posts == null)
{
    <div class="loading-view">
        <div class="loader"></div>
        <p>Loading...</p>
    </div>
}
else
{
    @if (joined == null)
    {
        <p id="not-followed">
            Seems like you heve not joined someone.<br />
            Go and join someone!
        </p>
    }
    else
    {
        @foreach (Post iterate in posts)
        {
            <PostComponent post="@iterate" isDelete="@isDelete" profileToUpdateState="@null" />
        }

        <p id="infinity-scroll-end">
            Seems like you have spent quite some time on our app.<br />
            <i class="bi bi-chat-heart-fill"></i><br />
            Thank you!
        </p>
    }

}

@code {
    private Gamer user;
    private List<Post> posts = new List<Post>();
    private List<Gamer> joined = new List<Gamer>();
    private bool isDelete = false;


    protected async override void OnInitialized()
    {
        user = await db.getGamerByUid(firebaseAuth.getClient().User.Uid);
        foreach (string iterate in user.joinedAsString)
        {
            joined.Add(await db.getGamerByUsername(iterate));
        }
        foreach (Gamer iterate in joined)
        {
            posts.AddRange(await db.getAllPostsFromGamer(iterate));
        }
        StateHasChanged();
    }

    public async void update()
    {
        user = await db.getGamerByUid(firebaseAuth.getClient().User.Uid);
        foreach (string iterate in user.joinedAsString)
        {
            joined.Add(await db.getGamerByUsername(iterate));
        }
        foreach (Gamer iterate in joined)
        {
            posts.AddRange(await db.getAllPostsFromGamer(iterate));
        }
        StateHasChanged();
    }
}